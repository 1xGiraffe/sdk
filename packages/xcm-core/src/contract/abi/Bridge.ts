export const BRIDGE = [
  {
    type: 'event',
    name: 'AdminChanged',
    inputs: [
      {
        type: 'address',
        name: 'previousAdmin',
        internalType: 'address',
        indexed: false,
      },
      {
        type: 'address',
        name: 'newAdmin',
        internalType: 'address',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BeaconUpgraded',
    inputs: [
      {
        type: 'address',
        name: 'beacon',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ContractUpgraded',
    inputs: [
      {
        type: 'address',
        name: 'oldContract',
        internalType: 'address',
        indexed: true,
      },
      {
        type: 'address',
        name: 'newContract',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Upgraded',
    inputs: [
      {
        type: 'address',
        name: 'implementation',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'contract IWETH' }],
    name: 'WETH',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'transfer',
        internalType: 'struct BridgeStructs.Transfer',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          { type: 'uint256', name: 'amount', internalType: 'uint256' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'bytes32', name: 'to', internalType: 'bytes32' },
          { type: 'uint16', name: 'toChain', internalType: 'uint16' },
          { type: 'uint256', name: 'fee', internalType: 'uint256' },
        ],
      },
    ],
    name: '_parseTransferCommon',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [{ type: 'uint64', name: 'sequence', internalType: 'uint64' }],
    name: 'attestToken',
    inputs: [
      { type: 'address', name: 'tokenAddress', internalType: 'address' },
      { type: 'uint32', name: 'nonce', internalType: 'uint32' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'bridgeContracts',
    inputs: [{ type: 'uint16', name: 'chainId_', internalType: 'uint16' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint16', name: '', internalType: 'uint16' }],
    name: 'chainId',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'completeTransfer',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'completeTransferAndUnwrapETH',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [{ type: 'bytes', name: '', internalType: 'bytes' }],
    name: 'completeTransferAndUnwrapETHWithPayload',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [{ type: 'bytes', name: '', internalType: 'bytes' }],
    name: 'completeTransferWithPayload',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [{ type: 'address', name: 'token', internalType: 'address' }],
    name: 'createWrapped',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
    name: 'encodeAssetMeta',
    inputs: [
      {
        type: 'tuple',
        name: 'meta',
        internalType: 'struct BridgeStructs.AssetMeta',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'uint8', name: 'decimals', internalType: 'uint8' },
          { type: 'bytes32', name: 'symbol', internalType: 'bytes32' },
          { type: 'bytes32', name: 'name', internalType: 'bytes32' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
    name: 'encodeTransfer',
    inputs: [
      {
        type: 'tuple',
        name: 'transfer',
        internalType: 'struct BridgeStructs.Transfer',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          { type: 'uint256', name: 'amount', internalType: 'uint256' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'bytes32', name: 'to', internalType: 'bytes32' },
          { type: 'uint16', name: 'toChain', internalType: 'uint16' },
          { type: 'uint256', name: 'fee', internalType: 'uint256' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
    name: 'encodeTransferWithPayload',
    inputs: [
      {
        type: 'tuple',
        name: 'transfer',
        internalType: 'struct BridgeStructs.TransferWithPayload',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          { type: 'uint256', name: 'amount', internalType: 'uint256' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'bytes32', name: 'to', internalType: 'bytes32' },
          { type: 'uint16', name: 'toChain', internalType: 'uint16' },
          {
            type: 'bytes32',
            name: 'fromAddress',
            internalType: 'bytes32',
          },
          { type: 'bytes', name: 'payload', internalType: 'bytes' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'evmChainId',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint8', name: '', internalType: 'uint8' }],
    name: 'finality',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'governanceActionIsConsumed',
    inputs: [{ type: 'bytes32', name: 'hash', internalType: 'bytes32' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint16', name: '', internalType: 'uint16' }],
    name: 'governanceChainId',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'governanceContract',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'implementation',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'initialize',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isFork',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isInitialized',
    inputs: [{ type: 'address', name: 'impl', internalType: 'address' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isTransferCompleted',
    inputs: [{ type: 'bytes32', name: 'hash', internalType: 'bytes32' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isWrappedAsset',
    inputs: [{ type: 'address', name: 'token', internalType: 'address' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'outstandingBridged',
    inputs: [{ type: 'address', name: 'token', internalType: 'address' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'meta',
        internalType: 'struct BridgeStructs.AssetMeta',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'uint8', name: 'decimals', internalType: 'uint8' },
          { type: 'bytes32', name: 'symbol', internalType: 'bytes32' },
          { type: 'bytes32', name: 'name', internalType: 'bytes32' },
        ],
      },
    ],
    name: 'parseAssetMeta',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'uint8', name: 'payloadID', internalType: 'uint8' }],
    name: 'parsePayloadID',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'rci',
        internalType: 'struct BridgeStructs.RecoverChainId',
        components: [
          { type: 'bytes32', name: 'module', internalType: 'bytes32' },
          { type: 'uint8', name: 'action', internalType: 'uint8' },
          {
            type: 'uint256',
            name: 'evmChainId',
            internalType: 'uint256',
          },
          { type: 'uint16', name: 'newChainId', internalType: 'uint16' },
        ],
      },
    ],
    name: 'parseRecoverChainId',
    inputs: [
      {
        type: 'bytes',
        name: 'encodedRecoverChainId',
        internalType: 'bytes',
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'chain',
        internalType: 'struct BridgeStructs.RegisterChain',
        components: [
          { type: 'bytes32', name: 'module', internalType: 'bytes32' },
          { type: 'uint8', name: 'action', internalType: 'uint8' },
          { type: 'uint16', name: 'chainId', internalType: 'uint16' },
          {
            type: 'uint16',
            name: 'emitterChainID',
            internalType: 'uint16',
          },
          {
            type: 'bytes32',
            name: 'emitterAddress',
            internalType: 'bytes32',
          },
        ],
      },
    ],
    name: 'parseRegisterChain',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'transfer',
        internalType: 'struct BridgeStructs.Transfer',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          { type: 'uint256', name: 'amount', internalType: 'uint256' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'bytes32', name: 'to', internalType: 'bytes32' },
          { type: 'uint16', name: 'toChain', internalType: 'uint16' },
          { type: 'uint256', name: 'fee', internalType: 'uint256' },
        ],
      },
    ],
    name: 'parseTransfer',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'transfer',
        internalType: 'struct BridgeStructs.TransferWithPayload',
        components: [
          { type: 'uint8', name: 'payloadID', internalType: 'uint8' },
          { type: 'uint256', name: 'amount', internalType: 'uint256' },
          {
            type: 'bytes32',
            name: 'tokenAddress',
            internalType: 'bytes32',
          },
          { type: 'uint16', name: 'tokenChain', internalType: 'uint16' },
          { type: 'bytes32', name: 'to', internalType: 'bytes32' },
          { type: 'uint16', name: 'toChain', internalType: 'uint16' },
          {
            type: 'bytes32',
            name: 'fromAddress',
            internalType: 'bytes32',
          },
          { type: 'bytes', name: 'payload', internalType: 'bytes' },
        ],
      },
    ],
    name: 'parseTransferWithPayload',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [
      {
        type: 'tuple',
        name: 'chain',
        internalType: 'struct BridgeStructs.UpgradeContract',
        components: [
          { type: 'bytes32', name: 'module', internalType: 'bytes32' },
          { type: 'uint8', name: 'action', internalType: 'uint8' },
          { type: 'uint16', name: 'chainId', internalType: 'uint16' },
          {
            type: 'bytes32',
            name: 'newContract',
            internalType: 'bytes32',
          },
        ],
      },
    ],
    name: 'parseUpgrade',
    inputs: [{ type: 'bytes', name: 'encoded', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'registerChain',
    inputs: [{ type: 'bytes', name: 'encodedVM', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'submitRecoverChainId',
    inputs: [{ type: 'bytes', name: 'encodedVM', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'tokenImplementation',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [{ type: 'uint64', name: 'sequence', internalType: 'uint64' }],
    name: 'transferTokens',
    inputs: [
      { type: 'address', name: 'token', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
      { type: 'uint16', name: 'recipientChain', internalType: 'uint16' },
      { type: 'bytes32', name: 'recipient', internalType: 'bytes32' },
      { type: 'uint256', name: 'arbiterFee', internalType: 'uint256' },
      { type: 'uint32', name: 'nonce', internalType: 'uint32' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [{ type: 'uint64', name: 'sequence', internalType: 'uint64' }],
    name: 'transferTokensWithPayload',
    inputs: [
      { type: 'address', name: 'token', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
      { type: 'uint16', name: 'recipientChain', internalType: 'uint16' },
      { type: 'bytes32', name: 'recipient', internalType: 'bytes32' },
      { type: 'uint32', name: 'nonce', internalType: 'uint32' },
      { type: 'bytes', name: 'payload', internalType: 'bytes' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [{ type: 'address', name: 'token', internalType: 'address' }],
    name: 'updateWrapped',
    inputs: [{ type: 'bytes', name: 'encodedVm', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'upgrade',
    inputs: [{ type: 'bytes', name: 'encodedVM', internalType: 'bytes' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'address', name: '', internalType: 'contract IWormhole' },
    ],
    name: 'wormhole',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [{ type: 'uint64', name: 'sequence', internalType: 'uint64' }],
    name: 'wrapAndTransferETH',
    inputs: [
      { type: 'uint16', name: 'recipientChain', internalType: 'uint16' },
      { type: 'bytes32', name: 'recipient', internalType: 'bytes32' },
      { type: 'uint256', name: 'arbiterFee', internalType: 'uint256' },
      { type: 'uint32', name: 'nonce', internalType: 'uint32' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [{ type: 'uint64', name: 'sequence', internalType: 'uint64' }],
    name: 'wrapAndTransferETHWithPayload',
    inputs: [
      { type: 'uint16', name: 'recipientChain', internalType: 'uint16' },
      { type: 'bytes32', name: 'recipient', internalType: 'bytes32' },
      { type: 'uint32', name: 'nonce', internalType: 'uint32' },
      { type: 'bytes', name: 'payload', internalType: 'bytes' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'wrappedAsset',
    inputs: [
      { type: 'uint16', name: 'tokenChainId', internalType: 'uint16' },
      { type: 'bytes32', name: 'tokenAddress', internalType: 'bytes32' },
    ],
  },
  { type: 'receive', stateMutability: 'payable' },
];
